{"ast":null,"code":"var _jsxFileName = \"D:\\\\AI\\\\FresherTMT\\\\Docker\\\\abc\\\\Docker_django-postgres-reactjs-pytorch-environment\\\\frontend\\\\src\\\\App.js\";\nimport './App.css';\nimport React, { Component } from 'react';\nimport ChatBot from './components';\nimport { ThemeProvider } from 'styled-components';\nimport * as reply from './reply.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      prediction: '',\n      conversation: [],\n      infor: {\n        size: '',\n        weight: '',\n        height: '',\n        V2: '',\n        phone: '',\n        Id_cus: '',\n        addr: '',\n        material: '',\n        color: '',\n        amount: '',\n        price: '',\n        name: '',\n        url: '',\n        typeI: '',\n        typeR: ''\n      },\n      stateConv: 'inforproduct',\n      //[inforproduct, sizeadvisory, order, changing]\n      sizeR: '',\n      previousReply: '',\n      previousIntent: '',\n      order: {\n        name_product: '',\n        amount: 1,\n        size: '',\n        color: '',\n        addr: '',\n        phone: '',\n        name_cus: '',\n        price: ''\n      },\n      lstCus: []\n    };\n    this.theme = {\n      background: 'rgba(255, 255, 255, 1)',\n      fontFamily: 'Helvetica Neue',\n      'border-radius': '10px',\n      headerBgColor: 'rgba(141, 131, 156, 0.667)',\n      headerFontColor: '#fff',\n      headerFontSize: '25px',\n      botBubbleColor: '#fff',\n      botFontColor: '#4a4a4a',\n      userBubbleColor: 'rgba(141, 131, 156, 0.667)',\n      userFontColor: '#fff'\n    };\n  }\n\n  async predict(text) {\n    const url = \"http://localhost:8000/predictJson\";\n    const bodyData = JSON.stringify({\n      \"text\": text\n    });\n    const reqOpt = {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: bodyData\n    };\n    await fetch(url, reqOpt).then(resp => resp.json()).then(respJ => {\n      this.setState({\n        prediction: respJ.label\n      }, () => {\n        console.log(respJ);\n        const {\n          infor,\n          order,\n          stateConv,\n          previousReply,\n          previousIntent,\n          conversation,\n          lstCus\n        } = this.state;\n        let temp = infor,\n            sizeR = respJ.infor.size,\n            stateConvUpdate = stateConv,\n            temporder = order,\n            lstCusTemp = lstCus;\n\n        if (!infor.name && respJ.infor.name) {\n          temp = respJ.infor;\n\n          if (infor.height && !respJ.infor.height) {\n            temp.height = infor.height;\n          }\n\n          if (infor.weight && !respJ.infor.weight) {\n            temp.weight = infor.weight;\n          }\n\n          if (infor.V2 && !respJ.infor.V2) {\n            temp.V2 = infor.V2;\n          }\n        } else if (infor.name && respJ.infor.name && respJ.infor.name !== infor.name) {\n          temp = respJ.infor;\n        } else if (respJ.infor.typeI.includes('height') || respJ.infor.typeI.includes('weight')) {\n          if (respJ.infor.height) temp.height = respJ.infor.height;\n          if (respJ.infor.weight) temp.weight = respJ.infor.weight;\n        } else if (respJ.infor.typeI === 'size' && respJ.infor.size) {\n          console.log(infor.size);\n\n          if (!infor.size.includes(respJ.infor.size)) {\n            sizeR = 'None' + respJ.infor.size;\n          } else if (respJ.label === 'Inform') {\n            sizeR = respJ.infor.size;\n          }\n        } else if (respJ.infor.typeI === 'V2' && respJ.infor.V2) {\n          temp.V2 = respJ.infor.V2;\n        } else if (respJ.infor.typeI === 'phone' && respJ.infor.phone) {\n          temp.phone = respJ.infor.phone;\n        } else if (respJ.infor.typeI === 'address' && respJ.infor.addr) {\n          temp.addr = respJ.infor.addr;\n        } else if (respJ.infor.typeI === 'amount_product' && respJ.infor.amount) {\n          temp.amount = respJ.infor.amount;\n        }\n\n        if (respJ.label === 'Request') {\n          let check = false;\n          stateConvUpdate = 'inforproduct';\n\n          if (respJ.infor.typeI !== 'size' && respJ.infor.typeR === 'size' && (respJ.infor.height || respJ.infor.weight || respJ.infor.V2)) {\n            stateConvUpdate = 'sizeadvisory';\n          } else if (respJ.infor.typeR === 'size') {\n            let temp1 = conversation.slice(-2);\n\n            if (temp1[0].includes('User: ') && previousIntent === 'Inform') {\n              stateConvUpdate = 'sizeadvisory';\n              infor.typeI = 'height';\n              check = true;\n            }\n          }\n\n          if (infor.typeR !== \"no-find-img\" && !respJ.infor.name) {\n            temp.typeR = respJ.infor.typeR;\n            if (!check) temp.typeI = respJ.infor.typeI;\n          } else if (infor.name !== respJ.infor.name) {\n            temp = respJ.infor;\n          }\n        } else if (respJ.label === 'Inform') {\n          if ((respJ.infor.typeI === 'size' || respJ.infor.typeR === 'size') && stateConv !== 'order') {\n            stateConvUpdate = 'sizeadvisory';\n          }\n\n          if (respJ.infor.height || respJ.infor.weight || respJ.infor.V2) {\n            stateConvUpdate = 'sizeadvisory';\n          }\n\n          temp.typeI = respJ.infor.typeI;\n          temp.typeR = infor.typeR;\n        } else if (respJ.label === 'Other') {\n          if (stateConv === 'sizeadvisory') {\n            if (previousReply === reply.Request['V2-customer']) {\n              temp.V2 = respJ.infor.V2 ? respJ.infor.V2 : -1;\n              temp.typeI = 'V2';\n            } else if (previousReply === reply.Request['weight-customer']) {\n              temp.weight = respJ.infor.weight ? respJ.infor.weight : -1;\n              temp.typeI = 'weight';\n            } else if (previousReply === reply.Request['height-customer']) {\n              temp.height = respJ.infor.height ? respJ.infor.height : -1;\n              temp.typeI = 'height';\n            }\n          }\n\n          if (stateConv === 'order') {\n            if (previousReply === reply.Order.phone) {\n              temp.phone = respJ.infor.phone;\n              temp.typeI = 'phone';\n            }\n          }\n\n          temp.typeR = respJ.infor.typeR;\n        }\n\n        if (stateConv === 'order' || respJ.label === 'Order') {\n          if (respJ.infor.name && !order.name_product) {\n            temporder.name_product = respJ.infor.name;\n          } else if (!respJ.infor.name && infor.name) {\n            temporder.name_product = infor.name;\n          }\n\n          if (respJ.infor.addr && !order.addr) {\n            temporder.addr = respJ.infor.addr;\n          }\n\n          if (respJ.infor.phone && !order.phone) {\n            temporder.phone = respJ.infor.phone;\n          }\n\n          if (respJ.infor.amount && !order.amount) {\n            temporder.amount = respJ.infor.amount;\n          }\n\n          if (respJ.infor.Id_cus && !order.name_cus) {\n            temporder.name_cus = respJ.infor.Id_cus;\n          }\n\n          if (sizeR && (!order.size || order.size.includes('None'))) {\n            temporder.size = sizeR;\n          } else if (!sizeR && this.state.sizeR) {\n            temporder.size = this.state.sizeR;\n          }\n\n          temporder.price = temporder.amount * infor.price;\n          stateConvUpdate = 'order';\n        }\n\n        if (respJ.label === 'Request' || respJ.label === 'Order') {\n          lstCusTemp.push([respJ.label, respJ.infor.typeI, respJ.infor.typeR]);\n        }\n\n        this.setState({\n          sizeR,\n          stateConv: stateConvUpdate,\n          infor: temp,\n          order: temporder,\n          lstCus: lstCusTemp,\n          previousIntent: respJ.label\n        });\n      });\n    });\n  }\n\n  async predictImg(urlin) {\n    const url = \"http://localhost:8000/imgPredict\";\n    const bodyData = JSON.stringify({\n      \"img\": urlin\n    });\n    const reqOpt = {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: bodyData\n    };\n    await fetch(url, reqOpt).then(resp => resp.json()).then(respJ => {\n      const {\n        infor\n      } = this.state;\n      let temp = respJ.infor;\n\n      if (infor.typeR) {\n        temp.typeR = infor.typeR;\n      }\n\n      if (infor.height) {\n        temp.height = infor.height;\n      }\n\n      if (infor.weight) {\n        temp.weight = infor.weight;\n      }\n\n      if (infor.V2) {\n        temp.V2 = infor.V2;\n      }\n\n      this.setState({\n        infor: temp,\n        prediction: respJ.label\n      });\n    });\n  }\n\n  async conversationUpdate(conv) {\n    var conver = \"\";\n\n    for (let i = 0; i < conv.length; i++) {\n      conver += conv[i] + \"\\n\";\n    }\n\n    const url = \"http://localhost:8000/conversation\";\n    const bodyData = JSON.stringify({\n      \"conversation\": conver\n    });\n    const reqOpt = {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: bodyData\n    };\n    await fetch(url, reqOpt).then(resp => resp.json()).then(respJ => {\n      console.log('Conversation updated!');\n    });\n  }\n\n  async order(infor) {\n    const url = \"http://localhost:8000/order\";\n    const bodyData = JSON.stringify({\n      \"order\": infor\n    });\n    const reqOpt = {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: bodyData\n    };\n    await fetch(url, reqOpt).then(resp => resp.json()).then(respJ => {\n      console.log('Bill updated!');\n    });\n  }\n\n  consultation(height, weight, v2) {\n    if (weight >= 40 && weight <= 56) {\n      if (weight <= 47) {\n        return 'S';\n      } else if (weight >= 53) {\n        return 'L';\n      }\n\n      return 'M';\n    } else if (v2 >= 55 && v2 <= 74) {\n      if (v2 <= 66) {\n        return 'S';\n      } else if (v2 >= 71) {\n        return 'L';\n      }\n\n      return 'M';\n    }\n\n    return 'Nonesize';\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n          theme: this.theme,\n          children: /*#__PURE__*/_jsxDEV(ChatBot, {\n            headerTitle: \"TMT chatbot\",\n            botDelay: 5000,\n            userDelay: 1500,\n            width: '750px',\n            height: '650px',\n            steps: [{\n              id: 'start',\n              message: () => {\n                const {\n                  conversation\n                } = this.state;\n                var newcon = conversation;\n                newcon.push('Bot: Welcome!');\n                this.setState({\n                  conversation: newcon\n                });\n                return reply['Hello-Connect'];\n              },\n              trigger: 'user'\n            }, {\n              id: 'user',\n              user: true,\n              trigger: value => {\n                if (!value.value) {\n                  return 'user';\n                }\n\n                const {\n                  conversation\n                } = this.state;\n                var newcon = conversation;\n\n                if (Array.isArray(value.value)) {\n                  newcon.push('User:ImageURL');\n                  this.predictImg(value.value[0]);\n                } else {\n                  newcon.push('User: ' + value.value);\n                  this.predict(value.value);\n                }\n\n                this.setState({\n                  conversation: newcon\n                });\n                return 'bot';\n              }\n            }, {\n              // this step to wait to states updated\n              id: 'bot',\n              message: 'gypERR!sackError:Col o id nyVisualStuio nstallationtouse',\n              trigger: 'bot1'\n            }, {\n              // this step to wait to states updated\n              id: 'bot1',\n              message: 'gypERR!sackError:Col o id nyVisualStuio nstallationtouse',\n              trigger: 'reply'\n            }, {\n              id: 'reply',\n              message: value => {\n                var {\n                  conversation,\n                  infor,\n                  stateConv,\n                  order,\n                  sizeR,\n                  lstCus,\n                  prediction\n                } = this.state;\n                console.log(infor);\n                var {\n                  typeI,\n                  typeR\n                } = infor;\n                var newcon = conversation,\n                    many = false,\n                    mess = \"\";\n\n                if (lstCus.length >= 1) {\n                  many = true;\n                  prediction = lstCus[0][0];\n                  typeI = lstCus[0][1];\n                  typeR = lstCus[0][2];\n                }\n\n                if (prediction === 'Other') {\n                  mess = reply.Other;\n\n                  if (stateConv === 'sizeadvisory') {\n                    prediction = 'Inform';\n                  } else if (typeR === 'product_image') {\n                    prediction = 'Request';\n                  } else if (typeI === 'phone') {\n                    prediction = 'Order';\n                  }\n                }\n\n                if (prediction === 'Inform') {\n                  mess = reply.Inform;\n\n                  if (!infor.name) {\n                    mess = reply.Request.not_ID_product;\n                  } else if (stateConv === 'sizeadvisory') {\n                    let t = this.consultation(infor.height, infor.weight, infor.V2);\n\n                    if (t !== 'Nonesize') {\n                      mess = 'Vậy bạn mặc size ' + t + ' là siêu đẹp luôn nha.';\n\n                      if (!infor.size.includes(t)) {\n                        mess += ' Nhưng mà bên mình hết size ' + t + ' rồi bạn thông cảm nha.';\n                      }\n                    }\n\n                    if (!infor.name) {\n                      prediction = 'Request';\n                    } else if (sizeR.includes('None')) {\n                      mess = 'Xin lỗi bạn bên mình hết size ' + sizeR.slice(-1) + ' rồi nha.';\n                    } else if (typeI === 'size') {\n                      mess = reply.Request.sizeadvisory;\n                    } else {\n                      if (!infor.height) {\n                        mess = reply.Request['height-customer'];\n                      } else if (!infor.V2) {\n                        mess = reply.Request['V2-customer'];\n                      } else if (!infor.weight) {\n                        mess = reply.Request['weight-customer'];\n                      } else if (t !== 'Nonesize') {\n                        mess = 'Vậy bạn mặc size ' + t + ' là siêu đẹp luôn nha.';\n\n                        if (!infor.size.includes(t)) {\n                          mess += ' Nhưng mà bên mình hết size ' + t + ' rồi bạn thông cảm nha.';\n                        }\n                      } else mess = reply.Request['not-found-size'];\n                    }\n                  } else if (stateConv === 'order') {\n                    prediction = 'Order';\n                  } else if (stateConv === 'inforproduct') {\n                    prediction = 'Request';\n                  }\n                }\n\n                if (prediction === 'Request') {\n                  if (typeR === 'ID_product') {\n                    mess = infor.name + ' còn hàng á. Chất liệu ' + infor.material + ' nha. Bạn cho mình số đo mình tư vấn size cho bạn nha.';\n\n                    if (!infor.name) {\n                      mess = reply.Request.not_found_product;\n                    } else if (infor.amount === 0) {\n                      mess = infor.name + reply.Request['out-of-pro'];\n                    }\n                  } else if (!infor.name) {\n                    mess = reply.Request.not_ID_product;\n                  } else if (typeR === 'amount_product') {\n                    if (infor.amount === 0) {\n                      mess = infor.name + reply.Request['out-of-pro'];\n                    } else {\n                      mess = infor.name + ' còn hàng nha. Bạn cho mình xin số đo mình tư vấn size cho bạn nha.';\n                    }\n                  } else if (typeR === 'size') {\n                    mess = infor.name + ' còn size ' + infor.size + ' nha.';\n\n                    if (!(infor.weight && infor.height)) {\n                      mess += ' Bạn cho mình xin chiều cao cân nặng mình tư vấn thêm cho bạn nha!';\n                    }\n\n                    if (sizeR.includes('None')) {\n                      mess = infor.name + ' hết size ' + sizeR.slice(-1) + ' rồi nha.';\n                    } else if (infor.amount === 0) {\n                      mess = infor.name + reply.Request['out-of-pro'];\n                    } else if (stateConv === 'sizeadvisory') {\n                      let t = this.consultation(infor.height, infor.weight, infor.V2);\n\n                      if (t !== 'Nonesize') {\n                        mess = 'Vậy bạn mặc size ' + t + ' là siêu đẹp luôn nha.';\n\n                        if (!infor.size.includes(t)) {\n                          mess += ' Nhưng mà bên mình hết size ' + t + ' rồi bạn thông cảm nha.';\n                        }\n                      } else if (typeI === 'size') {\n                        mess = reply.Request.sizeadvisory;\n\n                        if (infor.size.includes('None')) {\n                          mess = 'Xin lỗi bạn bên mình hết size ' + infor.size.slice(-1) + ' rồi nha.';\n                        }\n                      } else {\n                        if (!infor.weight) {\n                          mess = reply.Request['weight-customer'];\n                        } else if (!infor.height) {\n                          mess = reply.Request['height-customer'];\n                        } else if (!infor.V2) {\n                          mess = reply.Request['V2-customer'];\n                        } else {\n                          mess = reply.Request['not-found-size'];\n                        }\n                      }\n                    }\n                  } else if (typeR === 'material_product') {\n                    mess = 'Dạ ' + infor.name + ' chất ' + infor.material + ' nha.';\n                  } else if (typeR === 'product_image') {\n                    mess = 'Dạ đây ạ.';\n                  } else if (typeR === 'color_product') {\n                    mess = infor.name + ' còn màu ' + infor.color + ' nha.';\n                  } else if (typeR === 'cost_product') {\n                    mess = infor.name + ' có giá ' + infor.price + 'k nha.';\n                  } else {\n                    mess = reply.Request[typeR];\n                  }\n                }\n\n                if (prediction === 'Order') {\n                  console.log(order);\n\n                  if (!infor.name) {\n                    mess = reply.Request.not_ID_product;\n                  } else if (infor.amount === 0) {\n                    mess = infor.name + reply.Request['out-of-pro'];\n                  } else if (!order.name_product) {\n                    mess = reply.Order.ID_product;\n                  } else if (!order.size) {\n                    mess = reply.Order.size;\n                  } else if (order.size.includes('None')) {\n                    mess = 'Xin lỗi bạn bên mình hết size ' + order.size.slice(-1) + ' rồi nha. Bạn chọn size khác giúp mình với ạ.';\n                  } else if (!order.phone) {\n                    mess = reply.Order.phone;\n                  }\n                  /* \r\n                  else if(!order.addr){\r\n                   mess = reply.Order.address\r\n                  }\r\n                  else if(!order.name){\r\n                   mess = reply.Order.name\r\n                  } */\n                  else {\n                      mess = reply.Order.check;\n                    }\n\n                  this.setState({\n                    stateConv: 'order'\n                  });\n                }\n\n                if (prediction === 'Changing' || prediction === 'Return') {\n                  mess = reply['Changing-Return'];\n                  this.setState({\n                    stateConv: 'changing'\n                  });\n                }\n\n                if (prediction === 'feedback') {\n                  mess = reply.Done;\n                }\n\n                if (prediction === 'Hello' || prediction === 'Connect') {\n                  mess = reply['Hello-Connect'];\n                }\n\n                if (prediction === 'OK') {\n                  mess = reply.OK;\n\n                  if (stateConv === 'sizeadvisory' && this.state.previousReply !== reply.Request['not-found-size']) {\n                    this.setState({\n                      stateConv: 'order'\n                    });\n                    mess = reply.Order.ok;\n                  } else if (stateConv === 'order') {\n                    if (this.state.previousReply === 'doneOrder') {\n                      mess = reply.Done;\n                      this.order(order);\n                    }\n                  }\n                }\n\n                if (prediction === 'Done') {\n                  mess = reply.Done;\n                  this.setState({\n                    sizeR: '',\n                    conversation: '',\n                    previousReply: '',\n                    previousIntent: '',\n                    infor: {\n                      size: '',\n                      weight: '',\n                      height: '',\n                      V2: '',\n                      phone: '',\n                      Id_cus: '',\n                      addr: '',\n                      material: '',\n                      color: '',\n                      amount: '',\n                      name: '',\n                      url: '',\n                      typeI: '',\n                      typeR: ''\n                    },\n                    lstCus: [],\n                    order: {\n                      name_product: '',\n                      amount: 1,\n                      size: '',\n                      color: '',\n                      addr: '',\n                      phone: '',\n                      name_cus: '',\n                      price: ''\n                    }\n                  });\n                  newcon.push('Bot: ' + mess);\n                  this.conversationUpdate(newcon);\n                  return mess;\n                }\n\n                let m = conversation.slice(-1);\n\n                if (!m[0].includes('User:') && many) {\n                  if (value.steps.reply && value.steps.reply.message === mess) {\n                    mess = 'gypERR!sackError:Col o id nyVisualStuio nstallationtouse';\n                  }\n                }\n\n                if (mess !== 'gypERR!sackError:Col o id nyVisualStuio nstallationtouse') {\n                  newcon.push('Bot: ' + mess);\n                  this.setState({\n                    conversation: newcon,\n                    previousReply: mess\n                  });\n                }\n\n                return mess;\n              },\n              trigger: value => {\n                var {\n                  lstCus\n                } = this.state;\n\n                if (lstCus.length > 1) {\n                  lstCus.shift();\n                  return 'reply';\n                } else {\n                  lstCus.shift();\n                }\n\n                if (value.steps.reply.message === reply.Request.sizeadvisory) {\n                  return 'sizetable';\n                }\n\n                if (value.steps.reply.message === reply.Request['not-found-size'] || value.steps.reply.message === reply.Request.not_found_product) {\n                  return 'newproduct';\n                }\n\n                if (value.steps.reply.message === 'Dạ đây ạ.') {\n                  return 'imageProduct';\n                }\n\n                if (value.steps.reply.message === reply.Order.check) {\n                  return 'ordername';\n                }\n\n                return 'user';\n              }\n            }, {\n              id: 'sizetable',\n              message: reply.sizeTable,\n              trigger: 'user'\n            }, {\n              id: 'newproduct',\n              message: () => {\n                var newm = this.state.conversation,\n                    mess = 'Bạn muốn tư vấn sản phẩm khác ko ạ?';\n                newm.push('Bot: ' + mess);\n                this.setState({\n                  conversation: newm\n                });\n                return mess;\n              },\n              trigger: 'user'\n            }, {\n              id: 'imageProduct',\n              message: () => {\n                const {\n                  infor\n                } = this.state;\n                let len = infor.url.length;\n                return 'http://localhost:8000' + infor.url[Math.floor(Math.random() * len)];\n              },\n              trigger: 'user'\n            }, {\n              id: 'ordername',\n              message: () => {\n                const {\n                  order,\n                  conversation\n                } = this.state;\n                var mess = 'Tên người nhận: ' + order.name_cus,\n                    newm = conversation;\n                newm.push('Bot: ' + mess);\n                this.setState({\n                  conversation: newm\n                });\n                return mess;\n              },\n              trigger: 'orderphone-address'\n            }, {\n              id: 'orderphone-address',\n              message: () => {\n                const {\n                  order,\n                  conversation\n                } = this.state;\n                var mess = 'Sđt: ' + order.phone + '. Địa chỉ: ' + order.addr + '.',\n                    newm = conversation;\n                newm.push('Bot: ' + mess);\n                this.setState({\n                  conversation: newm\n                });\n                return mess;\n              },\n              trigger: 'product'\n            }, {\n              id: 'product',\n              message: () => {\n                const {\n                  order,\n                  conversation\n                } = this.state;\n                this.setState({\n                  previousReply: 'doneOrder'\n                });\n                var mess = String(order.amount) + ' ' + order.name_product + ' size ' + order.size + '. Tổng cộng đơn hàng là ' + order.price + 'k nha.',\n                    newm = conversation;\n                newm.push('Bot: ' + mess);\n                this.setState({\n                  conversation: newm\n                });\n                return mess;\n              },\n              trigger: 'user'\n            }]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/AI/FresherTMT/Docker/abc/Docker_django-postgres-reactjs-pytorch-environment/frontend/src/App.js"],"names":["React","Component","ChatBot","ThemeProvider","reply","App","constructor","props","state","prediction","conversation","infor","size","weight","height","V2","phone","Id_cus","addr","material","color","amount","price","name","url","typeI","typeR","stateConv","sizeR","previousReply","previousIntent","order","name_product","name_cus","lstCus","theme","background","fontFamily","headerBgColor","headerFontColor","headerFontSize","botBubbleColor","botFontColor","userBubbleColor","userFontColor","predict","text","bodyData","JSON","stringify","reqOpt","method","headers","body","fetch","then","resp","json","respJ","setState","label","console","log","temp","stateConvUpdate","temporder","lstCusTemp","includes","check","temp1","slice","Request","Order","push","predictImg","urlin","conversationUpdate","conv","conver","i","length","consultation","v2","render","id","message","newcon","trigger","user","value","Array","isArray","many","mess","Other","Inform","not_ID_product","t","sizeadvisory","not_found_product","ID_product","Done","OK","ok","m","steps","shift","sizeTable","newm","len","Math","floor","random","String"],"mappings":"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","sourcesContent":["import './App.css';\r\nimport React, { Component } from 'react';\r\nimport ChatBot from './components';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport * as reply from './reply.json' ;\r\n\r\nclass App extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      prediction: '',\r\n      conversation: [],\r\n      infor: {\r\n        size: '', weight: '', height: '', V2: '',\r\n        phone: '', Id_cus: '', addr: '', material: '',\r\n        color: '', amount: '', price: '',\r\n        name: '', url: '', typeI: '', typeR: '' \r\n      },\r\n      stateConv: 'inforproduct', //[inforproduct, sizeadvisory, order, changing]\r\n      sizeR: '',\r\n      previousReply: '',\r\n      previousIntent: '',\r\n      order: {\r\n        name_product: '',\r\n        amount: 1,\r\n        size: '',\r\n        color: '',\r\n        addr: '',\r\n        phone: '',\r\n        name_cus: '',\r\n        price: ''\r\n      },\r\n      lstCus : []\r\n    };\r\n    this.theme = {\r\n      background: 'rgba(255, 255, 255, 1)',\r\n      fontFamily: 'Helvetica Neue',\r\n      'border-radius': '10px',\r\n      headerBgColor: 'rgba(141, 131, 156, 0.667)',\r\n      headerFontColor: '#fff',\r\n      headerFontSize: '25px',\r\n      botBubbleColor: '#fff',\r\n      botFontColor: '#4a4a4a',\r\n      userBubbleColor: 'rgba(141, 131, 156, 0.667)',\r\n      userFontColor: '#fff',\r\n    };\r\n  };\r\n\r\n  async predict(text){\r\n    const url = \"http://localhost:8000/predictJson\";\r\n    const bodyData = JSON.stringify({\r\n      \"text\" : text\r\n    });\r\n    const reqOpt = {method: \"POST\", headers: {\"Content-type\": \"application/json\"}, body: bodyData};\r\n    await fetch(url, reqOpt)\r\n    .then((resp)=>resp.json())\r\n    .then((respJ)=> {\r\n      this.setState({\r\n        prediction:respJ.label,\r\n      }, ()=>{\r\n        console.log(respJ)\r\n        const {infor, order, stateConv, previousReply, previousIntent, conversation, lstCus} = this.state\r\n        let temp = infor,\r\n            sizeR = respJ.infor.size,\r\n            stateConvUpdate = stateConv,\r\n            temporder = order,\r\n            lstCusTemp = lstCus;\r\n\r\n        if(!infor.name && respJ.infor.name){\r\n          temp = respJ.infor\r\n          if(infor.height && !respJ.infor.height){\r\n            temp.height = infor.height\r\n          }\r\n          if(infor.weight && !respJ.infor.weight){\r\n            temp.weight = infor.weight\r\n          }\r\n          if(infor.V2 && !respJ.infor.V2){\r\n            temp.V2 = infor.V2\r\n          }\r\n        }\r\n        else if(infor.name && respJ.infor.name && respJ.infor.name !== infor.name){\r\n          temp = respJ.infor\r\n        }\r\n        else if((respJ.infor.typeI).includes('height') || (respJ.infor.typeI).includes('weight')){\r\n          if(respJ.infor.height)\r\n            temp.height = respJ.infor.height\r\n          if(respJ.infor.weight)\r\n            temp.weight = respJ.infor.weight\r\n        }\r\n        else if(respJ.infor.typeI === 'size' && respJ.infor.size){\r\n          console.log(infor.size)\r\n          if(!(infor.size).includes(respJ.infor.size)){\r\n            sizeR = 'None' + respJ.infor.size\r\n          }\r\n          else if(respJ.label === 'Inform'){\r\n            sizeR = respJ.infor.size\r\n          }\r\n        }\r\n        else if(respJ.infor.typeI === 'V2' && respJ.infor.V2){\r\n          temp.V2 = respJ.infor.V2\r\n        }\r\n        else if(respJ.infor.typeI === 'phone' && respJ.infor.phone){\r\n          temp.phone = respJ.infor.phone\r\n        }\r\n        else if(respJ.infor.typeI === 'address' && respJ.infor.addr){\r\n          temp.addr = respJ.infor.addr\r\n        }\r\n        else if(respJ.infor.typeI === 'amount_product' && respJ.infor.amount){\r\n          temp.amount = respJ.infor.amount\r\n        }\r\n        if(respJ.label === 'Request'){\r\n          let check = false\r\n          stateConvUpdate = 'inforproduct'\r\n          if(respJ.infor.typeI !== 'size' && respJ.infor.typeR === 'size' && (respJ.infor.height || respJ.infor.weight || respJ.infor.V2)){\r\n            stateConvUpdate = 'sizeadvisory'\r\n          } \r\n          else if(respJ.infor.typeR === 'size'){\r\n            let temp1 = conversation.slice(-2)\r\n            if(temp1[0].includes('User: ') && previousIntent === 'Inform'){\r\n              stateConvUpdate = 'sizeadvisory'\r\n              infor.typeI = 'height'\r\n              check = true\r\n            }\r\n          }\r\n          if(infor.typeR !== \"no-find-img\" && !respJ.infor.name){\r\n            temp.typeR = respJ.infor.typeR\r\n            if(!check)\r\n              temp.typeI = respJ.infor.typeI\r\n          }\r\n          else if(infor.name !== respJ.infor.name){\r\n            temp = respJ.infor\r\n          }\r\n        }\r\n        else if (respJ.label === 'Inform'){\r\n          if((respJ.infor.typeI === 'size' || respJ.infor.typeR === 'size') && stateConv !== 'order'){\r\n            stateConvUpdate = 'sizeadvisory'\r\n          }\r\n          if(respJ.infor.height || respJ.infor.weight || respJ.infor.V2){\r\n            stateConvUpdate = 'sizeadvisory'\r\n          }\r\n          temp.typeI = respJ.infor.typeI\r\n          temp.typeR = infor.typeR\r\n        }\r\n        else if(respJ.label === 'Other'){\r\n          if(stateConv === 'sizeadvisory'){\r\n            if(previousReply === reply.Request['V2-customer']){\r\n              temp.V2 = respJ.infor.V2 ? respJ.infor.V2 : -1;\r\n              temp.typeI = 'V2'\r\n            }\r\n            else if(previousReply === reply.Request['weight-customer']){\r\n              temp.weight = respJ.infor.weight ? respJ.infor.weight : -1\r\n              temp.typeI = 'weight'\r\n            }\r\n            else if(previousReply === reply.Request['height-customer']){\r\n              temp.height = respJ.infor.height ? respJ.infor.height : -1\r\n              temp.typeI = 'height'\r\n            }\r\n          }\r\n          if(stateConv === 'order'){\r\n            if(previousReply === reply.Order.phone){\r\n              temp.phone = respJ.infor.phone\r\n              temp.typeI = 'phone'\r\n            }\r\n          }\r\n          temp.typeR = respJ.infor.typeR\r\n        }\r\n        if(stateConv === 'order' || respJ.label === 'Order'){\r\n          if(respJ.infor.name && !order.name_product){\r\n            temporder.name_product = respJ.infor.name\r\n          }\r\n          else if(!respJ.infor.name && infor.name){\r\n            temporder.name_product = infor.name\r\n          }\r\n          if(respJ.infor.addr && !order.addr){\r\n            temporder.addr = respJ.infor.addr\r\n          }\r\n          if(respJ.infor.phone && !order.phone){\r\n            temporder.phone = respJ.infor.phone\r\n          }\r\n          if(respJ.infor.amount && !order.amount){\r\n            temporder.amount = respJ.infor.amount\r\n          }\r\n          if(respJ.infor.Id_cus && !order.name_cus){\r\n            temporder.name_cus = respJ.infor.Id_cus\r\n          }\r\n          if(sizeR && (!order.size || order.size.includes('None'))){\r\n            temporder.size = sizeR\r\n          }\r\n          else if (!sizeR && this.state.sizeR){\r\n            temporder.size = this.state.sizeR\r\n          }\r\n          temporder.price = temporder.amount * infor.price\r\n          stateConvUpdate = 'order'\r\n        }\r\n        if(respJ.label === 'Request' || respJ.label === 'Order'){\r\n          lstCusTemp.push([respJ.label, respJ.infor.typeI, respJ.infor.typeR])\r\n        }\r\n        this.setState({\r\n          sizeR,\r\n          stateConv: stateConvUpdate,\r\n          infor: temp,\r\n          order: temporder,\r\n          lstCus: lstCusTemp,\r\n          previousIntent: respJ.label\r\n        })\r\n      })\r\n    });\r\n  };\r\n\r\n  async predictImg(urlin){\r\n    const url = \"http://localhost:8000/imgPredict\";\r\n    const bodyData = JSON.stringify({\r\n      \"img\" : urlin\r\n    });\r\n    const reqOpt = {method: \"POST\", headers: {\"Content-type\": \"application/json\"}, body: bodyData};\r\n    await fetch(url, reqOpt)\r\n    .then((resp) => resp.json())\r\n    .then((respJ) => {\r\n      const { infor } = this.state;\r\n      let temp = respJ.infor;\r\n\r\n      if(infor.typeR){\r\n        temp.typeR = infor.typeR;\r\n      }\r\n      if(infor.height){\r\n        temp.height = infor.height\r\n      }\r\n      if(infor.weight){\r\n        temp.weight = infor.weight\r\n      }\r\n      if(infor.V2){\r\n        temp.V2 = infor.V2\r\n      }\r\n      this.setState({\r\n        infor:temp,\r\n        prediction:respJ.label\r\n      });\r\n    });\r\n  };\r\n\r\n  async conversationUpdate(conv){\r\n    var conver = \"\";\r\n    for (let i = 0; i < conv.length; i++) {\r\n      conver += conv[i] + \"\\n\";\r\n    }\r\n    const url = \"http://localhost:8000/conversation\";\r\n    const bodyData = JSON.stringify({\r\n      \"conversation\" : conver\r\n    });\r\n    const reqOpt = {method: \"POST\", headers: {\"Content-type\": \"application/json\"}, body: bodyData};\r\n    await fetch(url, reqOpt)\r\n    .then((resp) => resp.json())\r\n    .then((respJ) => {\r\n      console.log('Conversation updated!')\r\n    });\r\n  };\r\n\r\n  async order(infor){\r\n    const url = \"http://localhost:8000/order\";\r\n    const bodyData = JSON.stringify({\r\n      \"order\" : infor\r\n    });\r\n    const reqOpt = {method: \"POST\", headers: {\"Content-type\": \"application/json\"}, body: bodyData};\r\n    await fetch(url, reqOpt)\r\n    .then((resp) => resp.json())\r\n    .then((respJ) => {\r\n      console.log('Bill updated!')\r\n    });\r\n  }\r\n\r\n  consultation(height, weight, v2){\r\n    if(weight >= 40 && weight <= 56){\r\n      if(weight <= 47){\r\n        return 'S'\r\n      }\r\n      else if(weight >= 53){\r\n        return 'L'\r\n      }\r\n      return 'M'\r\n    }\r\n    else if (v2 >= 55 && v2 <= 74){\r\n      if(v2 <= 66){\r\n        return 'S'\r\n      }\r\n      else if(v2 >= 71){\r\n        return 'L'\r\n      }\r\n      return 'M'\r\n    }\r\n    return 'Nonesize'\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className = \"App\">\r\n        <header className = \"App-header\">\r\n        <ThemeProvider theme = {this.theme}>\r\n          <ChatBot\r\n            headerTitle = 'TMT chatbot'\r\n            botDelay = {5000}\r\n            userDelay = {1500}\r\n            width = {'750px'}\r\n            height = {'650px'}\r\n            steps = {[\r\n              {\r\n                id: 'start',\r\n                message: () => {\r\n                  const {conversation} = this.state;\r\n                  var newcon = conversation;\r\n                  newcon.push('Bot: Welcome!')\r\n                  this.setState({conversation:newcon})\r\n                  return reply['Hello-Connect']\r\n                },\r\n                trigger: 'user',\r\n              },\r\n              {\r\n                id: 'user',\r\n                user: true,\r\n                trigger: (value)=>{\r\n                  if(!value.value){\r\n                    return 'user'\r\n                  }\r\n                  const {conversation} = this.state;\r\n                  var newcon = conversation;\r\n                  if(Array.isArray(value.value)){\r\n                    newcon.push('User:ImageURL')\r\n                    this.predictImg(value.value[0])\r\n                  }\r\n                  else{\r\n                    newcon.push('User: ' + value.value)\r\n                    this.predict(value.value)\r\n                  }\r\n                  this.setState({conversation: newcon})\r\n                  return 'bot'\r\n                }\r\n              },\r\n              {\r\n                // this step to wait to states updated\r\n                id: 'bot',\r\n                message: 'gypERR!sackError:Col o id nyVisualStuio nstallationtouse',\r\n                trigger: 'bot1'\r\n              },\r\n              {\r\n                // this step to wait to states updated\r\n                id: 'bot1',\r\n                message: 'gypERR!sackError:Col o id nyVisualStuio nstallationtouse',\r\n                trigger: 'reply'\r\n              },\r\n              {\r\n                id: 'reply',\r\n                message:(value)=>{\r\n                  var {conversation, infor, stateConv, order, sizeR, lstCus, prediction} = this.state;\r\n                  console.log(infor)\r\n                  var {typeI, typeR} = infor;\r\n                  var newcon = conversation,\r\n                      many = false,\r\n                      mess = \"\";\r\n                  if (lstCus.length >= 1){\r\n                    many = true;\r\n                    prediction = lstCus[0][0];\r\n                    typeI = lstCus[0][1]\r\n                    typeR = lstCus[0][2]\r\n                  }\r\n                  if (prediction === 'Other'){\r\n                    mess = reply.Other\r\n                    if(stateConv === 'sizeadvisory'){\r\n                      prediction = 'Inform'\r\n                    }\r\n                    else if(typeR === 'product_image'){\r\n                      prediction = 'Request'\r\n                    }\r\n                    else if(typeI === 'phone'){\r\n                      prediction = 'Order'\r\n                    }\r\n                  }\r\n                  if (prediction === 'Inform') {\r\n                    mess = reply.Inform\r\n                    if(!infor.name){\r\n                      mess = reply.Request.not_ID_product\r\n                    }\r\n                    else if(stateConv === 'sizeadvisory'){\r\n                      let t = this.consultation(infor.height, infor.weight, infor.V2);\r\n                      if(t !== 'Nonesize'){\r\n                        mess = 'Vậy bạn mặc size ' + t + ' là siêu đẹp luôn nha.'\r\n                        if(!infor.size.includes(t)){\r\n                          mess += ' Nhưng mà bên mình hết size ' + t + ' rồi bạn thông cảm nha.'\r\n                        }\r\n                      }\r\n                      if(!infor.name){\r\n                        prediction = 'Request'\r\n                      }\r\n                      else if(sizeR.includes('None')){\r\n                        mess = 'Xin lỗi bạn bên mình hết size ' + sizeR.slice(-1) + ' rồi nha.'\r\n                      }\r\n                      else if(typeI === 'size'){\r\n                        mess = reply.Request.sizeadvisory\r\n                      }\r\n                      else{\r\n                        if (!infor.height){\r\n                          mess = reply.Request['height-customer']\r\n                        }\r\n                        else if(!infor.V2){\r\n                          mess = reply.Request['V2-customer']\r\n                        }\r\n                        else if(!infor.weight){\r\n                          mess = reply.Request['weight-customer']\r\n                        }\r\n                        else if(t !== 'Nonesize'){\r\n                          mess = 'Vậy bạn mặc size ' + t + ' là siêu đẹp luôn nha.'\r\n                          if(!infor.size.includes(t)){\r\n                            mess += ' Nhưng mà bên mình hết size ' + t + ' rồi bạn thông cảm nha.'\r\n                          }\r\n                        }\r\n                        else mess = reply.Request['not-found-size']\r\n                      }\r\n                    }\r\n                    else if(stateConv === 'order'){\r\n                      prediction = 'Order'\r\n                    }\r\n                    else if(stateConv === 'inforproduct'){\r\n                      prediction = 'Request'\r\n                    }\r\n                  }\r\n                  if (prediction === 'Request'){\r\n                    if (typeR === 'ID_product'){\r\n                      mess = infor.name + ' còn hàng á. Chất liệu ' + infor.material + ' nha. Bạn cho mình số đo mình tư vấn size cho bạn nha.'\r\n                      if(!infor.name){\r\n                        mess = reply.Request.not_found_product\r\n                      }\r\n                      else if(infor.amount === 0){\r\n                        mess = infor.name + reply.Request['out-of-pro']\r\n                      }\r\n                    }\r\n                    else if(!infor.name){\r\n                      mess = reply.Request.not_ID_product\r\n                    }\r\n                    else if(typeR === 'amount_product'){\r\n                      if(infor.amount === 0){\r\n                        mess = infor.name + reply.Request['out-of-pro']\r\n                      }\r\n                      else{\r\n                        mess = infor.name + ' còn hàng nha. Bạn cho mình xin số đo mình tư vấn size cho bạn nha.'\r\n                      } \r\n                    }\r\n                    else if (typeR === 'size'){\r\n                      mess = infor.name + ' còn size ' + infor.size + ' nha.'\r\n                      if(!(infor.weight && infor.height)){\r\n                        mess += ' Bạn cho mình xin chiều cao cân nặng mình tư vấn thêm cho bạn nha!'\r\n                      }\r\n                      if((sizeR).includes('None')){\r\n                        mess = infor.name + ' hết size ' + (sizeR).slice(-1) + ' rồi nha.'\r\n                      }\r\n                      else if(infor.amount === 0){\r\n                        mess = infor.name + reply.Request['out-of-pro']\r\n                      }\r\n                      else if(stateConv === 'sizeadvisory'){\r\n                        let t = this.consultation(infor.height, infor.weight, infor.V2);\r\n                        if(t !== 'Nonesize'){\r\n                          mess = 'Vậy bạn mặc size ' + t + ' là siêu đẹp luôn nha.'\r\n                          if(!infor.size.includes(t)){\r\n                            mess += ' Nhưng mà bên mình hết size ' + t + ' rồi bạn thông cảm nha.'\r\n                          }\r\n                        }\r\n                        else if(typeI === 'size'){\r\n                          mess = reply.Request.sizeadvisory\r\n                          if(infor.size.includes('None')){\r\n                            mess = 'Xin lỗi bạn bên mình hết size ' + infor.size.slice(-1) + ' rồi nha.'\r\n                          }\r\n                        }\r\n                        else {\r\n                          if(!infor.weight){\r\n                            mess = reply.Request['weight-customer']\r\n                          }\r\n                          else if (!infor.height){\r\n                            mess = reply.Request['height-customer']\r\n                          }\r\n                          else if (!infor.V2){\r\n                            mess = reply.Request['V2-customer']\r\n                          }\r\n                          else{\r\n                            mess = reply.Request['not-found-size'] \r\n                          }\r\n                        }\r\n                      }\r\n                    }\r\n                    else if (typeR === 'material_product'){\r\n                      mess = 'Dạ ' + infor.name + ' chất ' + infor.material + ' nha.'\r\n                    }\r\n                    else if (typeR === 'product_image'){\r\n                      mess = 'Dạ đây ạ.'\r\n                    }\r\n                    else if (typeR === 'color_product'){\r\n                      mess = infor.name + ' còn màu ' + infor.color + ' nha.'\r\n                    }\r\n                    else if (typeR === 'cost_product'){\r\n                      mess = infor.name + ' có giá ' + infor.price +'k nha.'\r\n                    }\r\n                    else {\r\n                      mess = reply.Request[typeR]\r\n                    }\r\n                  }\r\n                  if (prediction === 'Order'){\r\n                    console.log(order)\r\n                    if(!infor.name){\r\n                      mess = reply.Request.not_ID_product\r\n                    }\r\n                    else if(infor.amount === 0){\r\n                      mess = infor.name + reply.Request['out-of-pro']\r\n                    }\r\n                    else if(!order.name_product){\r\n                      mess = reply.Order.ID_product\r\n                    }\r\n                    else if(!order.size){\r\n                      mess = reply.Order.size\r\n                    }\r\n                    else if(order.size.includes('None')){\r\n                      mess = 'Xin lỗi bạn bên mình hết size ' + order.size.slice(-1) + ' rồi nha. Bạn chọn size khác giúp mình với ạ.'\r\n                    }\r\n                    else if(!order.phone){\r\n                      mess = reply.Order.phone\r\n                    }/* \r\n                    else if(!order.addr){\r\n                      mess = reply.Order.address\r\n                    }\r\n                    else if(!order.name){\r\n                      mess = reply.Order.name\r\n                    } */\r\n                    else {\r\n                      mess = reply.Order.check\r\n                    }\r\n                    this.setState({stateConv: 'order'})\r\n                  }\r\n                  if (prediction === 'Changing' || prediction === 'Return'){\r\n                    mess = reply['Changing-Return']\r\n                    this.setState({stateConv:'changing'})\r\n                  }\r\n                  if (prediction === 'feedback'){\r\n                    mess = reply.Done\r\n                  }\r\n                  if (prediction === 'Hello' || prediction === 'Connect'){\r\n                    mess = reply['Hello-Connect']\r\n                  }\r\n                  if (prediction === 'OK'){\r\n                    mess = reply.OK\r\n                    if(stateConv === 'sizeadvisory' && this.state.previousReply !== reply.Request['not-found-size']){\r\n                      this.setState({stateConv:'order'})\r\n                      mess = reply.Order.ok\r\n                    }\r\n                    else if(stateConv === 'order'){\r\n                      if(this.state.previousReply === 'doneOrder'){\r\n                        mess = reply.Done\r\n                        this.order(order)\r\n                      }\r\n                    }\r\n                  }\r\n                  if (prediction === 'Done'){\r\n                    mess = reply.Done\r\n                    this.setState({\r\n                      sizeR: '',\r\n                      conversation: '',\r\n                      previousReply: '',\r\n                      previousIntent: '',\r\n                      infor: {\r\n                        size: '', weight: '', height: '', V2: '', phone: '', Id_cus: '', addr: '',\r\n                        material: '', color: '', amount: '', name: '', url: '', typeI: '', typeR: ''\r\n                      },\r\n                      lstCus: [],\r\n                      order: {\r\n                        name_product: '', amount: 1, size: '', color: '', addr: '', phone: '', name_cus: '', price: ''\r\n                      }\r\n                    })\r\n                    newcon.push('Bot: ' + mess)\r\n                    this.conversationUpdate(newcon)\r\n                    return mess\r\n                  }\r\n                  let m = conversation.slice(-1);\r\n                  if(!m[0].includes('User:') && many){\r\n                    if(value.steps.reply && value.steps.reply.message === mess)\r\n                    {\r\n                      mess = 'gypERR!sackError:Col o id nyVisualStuio nstallationtouse'\r\n                    }\r\n                  }\r\n                  if(mess !== 'gypERR!sackError:Col o id nyVisualStuio nstallationtouse'){\r\n                    newcon.push('Bot: ' + mess)\r\n                    this.setState({\r\n                      conversation: newcon,\r\n                      previousReply: mess,\r\n                    })\r\n                  }\r\n                  return mess\r\n                },\r\n                trigger: (value)=>{\r\n                  var {lstCus} = this.state;\r\n                  if(lstCus.length > 1){\r\n                    lstCus.shift();\r\n                    return 'reply'\r\n                  }\r\n                  else{\r\n                    lstCus.shift();\r\n                  }\r\n                  if(value.steps.reply.message === reply.Request.sizeadvisory){\r\n                    return 'sizetable'\r\n                  }\r\n                  if(value.steps.reply.message === reply.Request['not-found-size'] || value.steps.reply.message === reply.Request.not_found_product){\r\n                    return 'newproduct'\r\n                  }\r\n                  if(value.steps.reply.message === 'Dạ đây ạ.'){\r\n                    return 'imageProduct'\r\n                  }\r\n                  if(value.steps.reply.message === reply.Order.check){\r\n                    return 'ordername'\r\n                  }\r\n                  return 'user'\r\n                }\r\n              },\r\n              {\r\n                id: 'sizetable',\r\n                message: reply.sizeTable,\r\n                trigger: 'user'\r\n              },\r\n              {\r\n                id: 'newproduct',\r\n                message: () => {\r\n                  var newm = this.state.conversation,\r\n                      mess = 'Bạn muốn tư vấn sản phẩm khác ko ạ?'\r\n                  newm.push('Bot: ' + mess);\r\n                  this.setState({conversation: newm});\r\n                  return mess;\r\n                },\r\n                trigger: 'user'\r\n              },\r\n              {\r\n                id: 'imageProduct',\r\n                message: () => {\r\n                  const {infor} = this.state;\r\n                  let len = infor.url.length\r\n                  return 'http://localhost:8000' + infor.url[Math.floor(Math.random() * len)]\r\n                },\r\n                trigger: 'user'\r\n              },\r\n              {\r\n                id: 'ordername',\r\n                message:() => {\r\n                  const {order, conversation} = this.state;\r\n                  var mess = 'Tên người nhận: ' + order.name_cus,\r\n                      newm = conversation;\r\n                  newm.push('Bot: ' + mess);\r\n                  this.setState({conversation: newm});\r\n                  return mess;\r\n                },\r\n                trigger: 'orderphone-address'\r\n              },\r\n              {\r\n                id: 'orderphone-address',\r\n                message: () => {\r\n                  const {order, conversation} = this.state;\r\n                  var mess = 'Sđt: ' + order.phone + '. Địa chỉ: ' + order.addr + '.',\r\n                      newm = conversation;\r\n                  newm.push('Bot: ' + mess);\r\n                  this.setState({conversation: newm});\r\n                  return mess;\r\n                },\r\n                trigger: 'product'\r\n              },\r\n              {\r\n                id: 'product',\r\n                message: () => {\r\n                  const {order, conversation} = this.state;\r\n                  this.setState({previousReply: 'doneOrder'})\r\n                  var mess = String(order.amount) + ' ' + order.name_product + ' size ' + order.size + '. Tổng cộng đơn hàng là ' + order.price + 'k nha.',\r\n                      newm = conversation;\r\n                  newm.push('Bot: ' + mess);\r\n                  this.setState({conversation: newm});\r\n                  return mess;\r\n                },\r\n                trigger: 'user'\r\n              }\r\n            ]}\r\n          />\r\n          </ThemeProvider>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}